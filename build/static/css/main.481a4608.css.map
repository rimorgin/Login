{"version":3,"file":"static/css/main.481a4608.css","mappings":"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","sources":["index.scss","styles/loader.css","styles/brgy-logo.css","styles/_extensions.scss","styles/Form.module.scss","styles/_mixins.scss","styles/_variables.scss","styles/app.scss","styles/breakpoints.scss","components/DiscussionBoardComponents/Post/Post.css","components/DiscussionBoardComponents/PostEditor/PostEditor.css"],"sourcesContent":["* {\n  font-weight: 700;\n  color: #fff;\n}\n\nbody {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, \"PT Sans\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n\n  background-color: #1f41a9;\n  background-image: url(../src/assets/BG.svg);\n}\n","\nbody {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, \"PT Sans\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n\n  background-color: #1f41a9;\n  background-image: url(../assets/BG.svg);\n}\n.preloader {\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 55;\n  color: #ffffff;\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #1f41a9;\n  overflow: hidden;\n  transition: opacity 0.75s, visibility 0.75s;\n}\n\n.preloader .texts-container {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 60px;\n  width: 280px;\n  font-size: 20px;\n  font-weight: 800;\n  overflow: hidden;\n}\n\n.loader {\n  margin-bottom: 20px;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #1f41a9;\n  overflow: hidden;\n  transition: opacity 0.75s, visibility 0.75s;\n}\n\n.loader-hidden {\n  opacity: 0;\n  visibility: hidden;\n}\n\n.loader::after {\n  content: \"\";\n  width: 75px;\n  height: 75px;\n  border: 15px solid #ffffff;\n  border-top-color: floralwhite;\n  animation: loading 0.75s ease infinite;\n  transition: opacity 0.75s, visibility 0.75s;\n  opacity: 1;\n  visibility: visible;\n}\n\n.loader-hidden::after {\n  opacity: 0;\n  visibility: hidden;\n}\n\n@keyframes loading {\n  from {\n    transform: rotate(0turn);\n  }\n  to {\n    transform: rotate(1turn);\n  }\n}\n",".logoContainer {\n    display: flex;\n    align-items: center;\n    padding: 0%;\n    padding-top: 15px;\n    padding-left: 15px;\n  }\n  \n  .logoContainer img {\n    height: 80px;\n    width: 80px;\n    font-size: 12px;\n    margin-right: 10px;\n    padding-top: 20px;\n  }\n  \n  .logoDesc {\n    font-weight: bold;\n    font-size: 20px;\n    padding-top: 10px;\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n    display: 'inline-block',\n  }\n  \n  .dashboardLogoContainer {\n    display: flex;\n    align-items: center;\n    padding: 0%;\n    padding-top: 15px;\n    padding-left: 15px;\n  }\n\n  .dashboardLogoContainer img {\n    height: 30px;\n    width: 30px;\n    font-size: 12px;\n    margin-right: 10px;\n    padding-top: 20px;\n  }",".mainInputStyle {\n  border-radius: 10px;\n  height: 50px;\n  background: none;\n  width: -webkit-fill-available;\n}\n\n@media (max-width: 768px) {\n  .mainInputStyle {\n    width: 100%;\n  }\n}\n\n.mainContainerStyle {\n  border-radius: 10px;\n  height: 500px;\n  background: none;\n  width: -webkit-fill-available;\n}\n\n@media (max-width: 768px) {\n  .mainContainerStyle {\n    width: 100%;\n  }\n}\n","@import \"mixins\";\n@import \"variables\";\n@import \"extensions\";\n\n.container {\n  border: 5px solid;\n  position: absolute;\n  width: 55dvw;\n  height: fit-content;\n  top: 55%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  justify-content: center;\n  align-items: center;\n  padding: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 1);\n\n  @include media-max-width() {\n    width: 90dvw; // Use viewport width instead of fixed pixel value\n    height: fit-content;\n    font-size: x-small;\n  }\n}\n\n\n.form {\n  display: grid;\n  margin: $main-margin * 4;\n  width: 433px;\n\n  @include media-max-width() {\n    width: 60vw; // Use viewport width instead of fixed pixel value\n    margin: $main-margin * 4; // Adjust margin for mobile devices\n  }\n}\n.inputContainer {\n  display: flex;\n  flex-direction: column;\n}\n\n.input {\n  @extend .mainInputStyle;\n  border: 1px solid #fff;\n  margin-top: $main-margin * 2;\n  padding-left: 10px;\n  width: 100%; /* Adjust width to fill the container */\n  box-sizing: border-box; /* Include padding and borders in width calculation */\n\n  @include media-max-width() {\n    width: 60vw; // Use viewport width instead of fixed pixel value\n    margin: $main-margin * 2; // Adjust margin for mobile devices\n  }\n}\n\n\n.loginBtn {\n  @extend .mainInputStyle;\n  border: 2px solid $submit-color;\n  margin-top: $main-margin * 2;\n  font-size: medium;\n  color: $submit-color;\n  cursor: pointer;\n\n  &:active {\n    opacity: 50%;\n  }\n\n  &:hover {\n    filter: invert(100%);\n  }\n  @include media-max-width() {\n    width: 60vw; // Use viewport width instead of fixed pixel value\n    margin: $main-margin * 2; // Adjust margin for mobile devices\n  }\n}\n\n.icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 15px;\n  width: 15px;\n}\n\n\n.h1text {\n  text-align: center;\n  padding-top: 30px;\n}\n.h1text2 {\n  text-align: center;\n  padding-top: 10px;\n}\n.h1text2 {\n  text-align: center;\n  padding-top: 5px;\n}\n.signUpPrompt {\n  text-align: center;\n  justify-content: center;\n  padding-bottom: 10px;\n}\n\n.FlexDiv {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 20vh; /* Set the height to 100% of the viewport height to center vertically */\n}\n\n.webcamContainer{\n  background-color: darken($color: #312a4a, $amount: 5);\n  align-items: center;\n  justify-content: center;\n}\n.webcam-btn {\n  align-items: center;\n}\n\n.hiddenMobile {\n  text-align: center;\n}\n\n.hiddenDesktop{\n  text-align: center;\n}\n\n\n\n","@mixin display-flex() {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n}\n\n@mixin justify-content-center() {\n  -webkit-box-pack: center;\n  -ms-flex-pack: center;\n  justify-content: center;\n}\n\n@mixin align-items-center() {\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n}\n\n@mixin input-placeholder() {\n  &::-webkit-input-placeholder,\n  &::-moz-placeholder,\n  &::-ms-input-placeholder,\n  &::placeholder {\n    position: absolute;\n    margin-top: 18px;\n    color: #fff;\n  }\n}\n\n@mixin media-max-width() {\n  @media (max-width: 550px) {\n    @content;\n  }\n}\n","$submit-color: #00ff29;\n$main-margin: 10px;\n\n// primary\n$black: #000000;\n$white: #ffffff;\n$blueBlack: #0B0B0F;\n$red: #df020a;\n$blackSec: #131419;\n\n\n// secondary\n$blue: #6166DC;\n\n\n//sub-texts/links\n$subText: #868F97;\n$darkOrange: #f72d00;\n$green: #00ffba;\n$secText: #858383;\n$col-yellow: #DBB635;\n\n\n\n\n// landing shapes\n$blueShape: #2a97ff;\n$redShape: #ff3562;\n$greenShape: #57e0c6;\n$purpleShape: #6935db;\n\n\n//unused colors\n// $shape: #2f2f2f;\n$grey-black: #0f0f0f;\n$orange: #f26d50;\n$pinkShape: #ff61bc;\n\n// portfolio boxes\n$boxBlue: #2a6ef0;\n\n\n\n@mixin button {\n    outline: none;\n    border: transparent;\n    // border-radius: 5px;\n    cursor: pointer;\n    // font-weight: 600;\n    text-transform: capitalize;\n    color: $white;\n    padding: 15px 30px;\n}\n\n@mixin textUnderline($color) {\n    background: linear-gradient(0deg, rgba(255, 0, 255, 0) 0%, rgba(255, 0, 255, 0) 16%, $color 16%, $color 32%, rgba(255, 0, 255, 0) 10%);\n    padding: .2em 0.1em;\n    box-decoration-break: clone;\n    -webkit-box-decoration-break: clone;\n}","@import './breakpoints.scss';\n@import './variables.scss';\n\n// entry transition class\n.transition {\n    overflow: hidden;\n    height: 0;\n    z-index: 1;\n    background: $black;\n    position: fixed;\n    left: 0;\n    top: 0;\n    // bottom: 0;\n    right: 0;\n}\n\n\n// exit transition class\n.transition2 {\n    @extend .transition;\n    z-index: 5;\n}\n\n\n//custom cursor\n\n.cursor {\n    width: 50px;\n    height: 50px;\n    pointer-events: none;\n    background-color: $white;\n    border-radius: 50%;\n    color: $black;\n    position: absolute;\n    transition: 450ms ease-out;\n    z-index: 10;\n    mix-blend-mode: exclusion;\n    animation: cursorName 500ms infinite alternate;\n\n    @include media(\"<=tablet\") {\n        display: none;\n    }\n}\n\n.cursor2 {\n    width: 10px;\n    height: 10px;\n    transition: 200ms ease-out;\n}\n\n.fade-in-section {\n    opacity: 0;\n    transform: translateY(20vh);\n    visibility: hidden;\n    transition: opacity 0.6s ease-out, transform 1.2s ease-out;\n    will-change: opacity, visibility;\n}\n\n.fade-in-section.visible {\n    opacity: 1;\n    transform: none;\n    visibility: visible;\n}\n\n.pages {\n    max-width: 1440px;\n    margin: 0 auto;\n}","$breakpoints: (\n  \"phone\": 425px,\n  \"tablet\": 768px,\n  \"desktop\": 1366px,\n  \"LGdesktop\": 1920px\n) !default;\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @author Eduardo Boucas\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///\t\t'retina2x': (\n///\t\t\t'(-webkit-min-device-pixel-ratio: 2)',\n///\t\t\t'(min-resolution: 192dpi)'\n///\t\t)\n///\t);\n///\n$media-expressions: (\n  \"screen\": \"screen\",\n  \"print\": \"print\",\n  \"handheld\": \"handheld\",\n  \"retina2x\": (\n    \"(-webkit-min-device-pixel-ratio: 2)\",\n    \"(min-resolution: 192dpi)\"\n  ),\n  \"retina3x\": (\n    \"(-webkit-min-device-pixel-ratio: 3)\",\n    \"(min-resolution: 350dpi)\"\n  )\n) !default;\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @author Eduardo Boucas\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media(\">128px\") {}\n///\n///\t /* Generates: */\n///\t @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media(\">20em\") {}\n///\n///\t /* Generates: */\n///\t @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media(\">2.0rem\") {}\n///\n///\t /* Generates: */\n///\t @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  \"px\": 1,\n  \"em\": 0.01,\n  \"rem\": 0.1\n) !default;\n///\n/// Generates a media query based on a list of conditions\n///\n/// @author Eduardo Boucas\n///\n/// @param {List}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media(\">phone\") { }\n///\n/// @example scss - With two set breakpoints\n///  @include media(\">phone\", \"<=tablet\") { }\n///\n/// @example scss - With custom values\n///  @include media(\">=358px\", \"<850px\") { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media(\">desktop\", \"<=1350px\") { }\n///\n/// @example scss - With a static expression\n///  @include media(\"retina2x\") { }\n///\n/// @example scss - Mixing everything\n///  @include media(\">=350px\", \"<tablet\", \"retina3x\") { }\n///\n@mixin media($conditions...) {\n  @for $i from 1 through length($conditions) {\n    $conditions: set-nth(\n      $conditions,\n      $i,\n      parse-expression(nth($conditions, $i))\n    );\n  }\n\n  $branches: get-query-branches($conditions);\n  $query: \"\";\n\n  @each $branch in $branches {\n    @if (str-length($query) != 0) {\n      $query: $query + \", \";\n    }\n\n    $query: $query + $branch;\n  }\n\n  @media #{$query} {\n    @content;\n  }\n}\n\n///\n/// Reads a list of media query expressions and separates logical disjunctions into different branches\n///\n/// @author Eduardo Boucas\n///\n/// @param {List}   $expressions  - list of expressions\n///\n/// @throws `$expression` is not a valid expression\n///\n/// @return {List | Null}\n///\n@function get-query-branches($expressions) {\n  $result: \"\";\n  $has-groups: false;\n\n  // Getting initial snapshot and looking for groups\n  @each $expression in $expressions {\n    @if (str-length($result) != 0) {\n      $result: $result + \" and \";\n    }\n\n    @if (type-of($expression) == \"string\") {\n      $result: $result + $expression;\n    } @else if (type-of($expression) == \"list\") {\n      $result: $result + nth($expression, 1);\n      $has-groups: true;\n    } @else {\n      @warn '#{$expression} is not a valid expression.';\n    }\n  }\n\n  // If we have groups, we have to create all possible combinations\n  @if $has-groups {\n    @each $expression in $expressions {\n      @if (type-of($expression) == \"list\") {\n        $first: nth($expression, 1);\n\n        @each $member in $expression {\n          @if ($member != $first) {\n            @each $partial in $result {\n              $result: join(\n                $result,\n                str-replace-first($first, $member, $partial)\n              );\n            }\n          }\n        }\n      }\n    }\n  }\n\n  @return $result;\n}\n\n///\n/// Parses a string to form a media query expression\n///\n/// @author Eduardo Boucas\n///\n/// @param {String}   $expression  - expression (in string)\n///\n/// @throws Expression with type `type-of($expression)` detected, string expected\n/// @throws `$expression` is missing an operator\n/// @throws Unknown unit: `$unit`\n///\n/// @return {String | Null}\n///\n@function parse-expression($expression) {\n  $operator: \"\";\n  $value: \"\";\n  $element: \"\";\n  $result: \"\";\n  $is-width: true;\n\n  @if (type-of($expression) != \"string\") {\n    @warn 'Expression with type `#{type-of($expression)}` detected, string expected.';\n  }\n\n  // Separating the operator from the rest of the expression\n  @if (str-slice($expression, 2, 2) == \"=\") {\n    $operator: str-slice($expression, 1, 2);\n    $value: str-slice($expression, 3);\n  } @else {\n    $operator: str-slice($expression, 1, 1);\n    $value: str-slice($expression, 2);\n  }\n\n  // Checking what type of expression we're dealing with\n  @if map-has-key($breakpoints, $value) {\n    $result: map-get($breakpoints, $value);\n  } @else if map-has-key($media-expressions, $expression) {\n    $result: map-get($media-expressions, $expression);\n    $is-width: false;\n  } @else {\n    $result: to-number($value);\n  }\n\n  @if ($is-width) {\n    $unit: unit($result);\n    $interval: 0;\n\n    @if (map-has-key($unit-intervals, $unit)) {\n      $interval: map-get($unit-intervals, $unit);\n    } @else {\n      @warn 'Unknown unit: #{$unit}';\n    }\n\n    @if ($operator == \">\") {\n      $element: \"(min-width: #{$result + $interval})\";\n    } @else if ($operator == \"<\") {\n      $element: \"(max-width: #{$result - $interval})\";\n    } @else if ($operator == \">=\") {\n      $element: \"(min-width: #{$result})\";\n    } @else if ($operator == \"<=\") {\n      $element: \"(max-width: #{$result})\";\n    } @else {\n      @warn '#{$expression} is missing an operator.';\n    }\n  } @else {\n    $element: $result;\n  }\n\n  @return $element;\n}\n\n///\n/// Replaces the first occurence of the string with the replacement string\n///\n/// @author Eduardo Boucas\n///\n/// @param {String}   $search  - The value being searched for\n/// @param {String}   $replace  - The replacement string\n/// @param {String}   $subject  - The string being replaced on\n///\n/// @return {String | Null}\n///\n@function str-replace-first($search, $replace, $subject) {\n  $search-start: str-index($subject, $search);\n\n  @if $search-start == null {\n    @return $subject;\n  }\n\n  $result: str-slice($subject, 0, $search-start - 1);\n  $result: $result + $replace;\n  $result: $result + str-slice($subject, $search-start + str-length($search));\n\n  @return $result;\n}\n\n///\n/// Casts a number to a string\n///\n/// @author Hugo Giraudel\n///\n/// @param {String}   $string  - Number to be parsed\n///\n/// @return {List | Null}\n///\n@function to-number($string) {\n  // Matrices\n  $strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\n  $numbers: 0 1 2 3 4 5 6 7 8 9;\n\n  // Result\n  $result: 0;\n  $divider: 0;\n  $minus: false;\n\n  // Looping through all characters\n  @for $i from 1 through str-length($string) {\n    $character: str-slice($string, $i, $i);\n    $index: index($strings, $character);\n\n    @if $character == \"-\" {\n      $minus: true;\n    } @else if $character == \".\" {\n      $divider: 1;\n    } @else {\n      @if type-of($index) != \"number\" {\n        $result: if($minus, $result * -1, $result);\n        @return _length($result, str-slice($string, $i));\n      }\n\n      $number: nth($numbers, $index);\n\n      @if $divider == 0 {\n        $result: $result * 10;\n      } @else {\n        // Move the decimal dot to the left\n        $divider: $divider * 10;\n        $number: $number / $divider;\n      }\n\n      $result: $result + $number;\n    }\n  }\n\n  @return if($minus, $result * -1, $result);\n}\n\n@function _length($number, $unit) {\n  $strings: \"px\" \"cm\" \"mm\" \"%\" \"ch\" \"pica\" \"in\" \"em\" \"rem\" \"pt\" \"pc\" \"ex\" \"vw\"\n    \"vh\" \"vmin\" \"vmax\";\n  $units: 1px 1cm 1mm 1% 1ch 1pica 1in 1em 1rem 1pt 1pc 1ex 1vw 1vh 1vmin 1vmax;\n  $index: index($strings, $unit);\n\n  @if type-of($index) != \"number\" {\n    @warn 'Unknown unit `#{$unit}`.';\n    @return false;\n  }\n\n  @return $number * nth($units, $index);\n}",".post-body {\n  margin: 1em 20%;\n  width: fit-content;\n  background-image: linear-gradient(to bottom right, rgb(66, 29, 231), cyan); /* Gradient from blue to cyan */\n  color: black;\n  border-radius: 10px;\n  position: relative;\n}\n\n.message {\n  padding-left: 10px;\n  padding-right: 10px;\n}\n\n.messageDate {\n  position: absolute; \n  right: 10px; \n  top: 10px; \n}\n\n\n@media(max-width: 900px) {\n  .post-body {\n    margin: 1em;\n  }\n}\n\n.text {\n  color: aliceblue;\n}","\n.post-editor {\n  margin: 1em 20%;\n  position: sticky;\n  bottom: 0;\n}\n\n.post-editor-button {\n  position: sticky;\n  float: right;\n  margin-top: 1em;\n  bottom: 0;\n}\n\n\n\n@media(max-width: 900px) {\n  .post-editor {\n    margin: 1em;\n  }\n\n  .post-body {\n    margin: 1em;\n  }\n}"],"names":[],"sourceRoot":""}