{"version":3,"file":"static/css/main.80555cf8.css","mappings":"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","sources":["index.scss","styles/loader.css","styles/brgy-logo.css","styles/_extensions.scss","styles/Form.module.scss","styles/_mixins.scss","styles/_variables.scss","styles/app.scss","styles/breakpoints.scss","components/DiscussionBoardComponents/Post/Post.css","components/DiscussionBoardComponents/PostEditor/PostEditor.css"],"sourcesContent":["* {\r\n  font-weight: 700;\r\n  color: #fff;\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n  font-family: -apple-system, BlinkMacSystemFont, \"PT Sans\", sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n\r\n  background-color: #1f41a9;\r\n  background-image: url(../src/assets/BG.svg);\r\n}\r\n","\r\nbody {\r\n  margin: 0;\r\n  font-family: -apple-system, BlinkMacSystemFont, \"PT Sans\", sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n\r\n  background-color: #1f41a9;\r\n  background-image: url(../assets/BG.svg);\r\n}\r\n.preloader {\r\n  position: fixed;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  z-index: 55;\r\n  color: #ffffff;\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #1f41a9;\r\n  overflow: hidden;\r\n  transition: opacity 0.75s, visibility 0.75s;\r\n}\r\n\r\n.preloader .texts-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: 60px;\r\n  width: 280px;\r\n  font-size: 20px;\r\n  font-weight: 800;\r\n  overflow: hidden;\r\n}\r\n\r\n.loader {\r\n  margin-bottom: 20px;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #1f41a9;\r\n  overflow: hidden;\r\n  transition: opacity 0.75s, visibility 0.75s;\r\n}\r\n\r\n.loader-hidden {\r\n  opacity: 0;\r\n  visibility: hidden;\r\n}\r\n\r\n.loader::after {\r\n  content: \"\";\r\n  width: 75px;\r\n  height: 75px;\r\n  border: 15px solid #ffffff;\r\n  border-top-color: floralwhite;\r\n  animation: loading 0.75s ease infinite;\r\n  transition: opacity 0.75s, visibility 0.75s;\r\n  opacity: 1;\r\n  visibility: visible;\r\n}\r\n\r\n.loader-hidden::after {\r\n  opacity: 0;\r\n  visibility: hidden;\r\n}\r\n\r\n@keyframes loading {\r\n  from {\r\n    transform: rotate(0turn);\r\n  }\r\n  to {\r\n    transform: rotate(1turn);\r\n  }\r\n}\r\n",".logoContainer {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0%;\r\n    padding-top: 15px;\r\n    padding-left: 15px;\r\n  }\r\n  \r\n  .logoContainer img {\r\n    height: 80px;\r\n    width: 80px;\r\n    font-size: 12px;\r\n    margin-right: 10px;\r\n    padding-top: 20px;\r\n  }\r\n  \r\n  .logoDesc {\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n    padding-top: 10px;\r\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n    display: 'inline-block',\r\n  }\r\n  \r\n  .dashboardLogoContainer {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0%;\r\n    padding-top: 15px;\r\n    padding-left: 15px;\r\n  }\r\n\r\n  .dashboardLogoContainer img {\r\n    height: 30px;\r\n    width: 30px;\r\n    font-size: 12px;\r\n    margin-right: 10px;\r\n    padding-top: 20px;\r\n  }",".mainInputStyle {\r\n  border-radius: 10px;\r\n  height: 50px;\r\n  background: none;\r\n  width: -webkit-fill-available;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .mainInputStyle {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n.mainContainerStyle {\r\n  border-radius: 10px;\r\n  height: 500px;\r\n  background: none;\r\n  width: -webkit-fill-available;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .mainContainerStyle {\r\n    width: 100%;\r\n  }\r\n}\r\n","@import \"mixins\";\r\n@import \"variables\";\r\n@import \"extensions\";\r\n\r\n.container {\r\n  border: 5px solid;\r\n  position: absolute;\r\n  width: 55dvw;\r\n  height: fit-content;\r\n  top: 55%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 10px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 1);\r\n\r\n  @include media-max-width() {\r\n    width: 90dvw; // Use viewport width instead of fixed pixel value\r\n    height: fit-content;\r\n    font-size: x-small;\r\n  }\r\n}\r\n\r\n\r\n.form {\r\n  display: grid;\r\n  margin: $main-margin * 4;\r\n  width: 433px;\r\n\r\n  @include media-max-width() {\r\n    width: 60vw; // Use viewport width instead of fixed pixel value\r\n    margin: $main-margin * 4; // Adjust margin for mobile devices\r\n  }\r\n}\r\n.inputContainer {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.input {\r\n  @extend .mainInputStyle;\r\n  border: 1px solid #fff;\r\n  margin-top: $main-margin * 2;\r\n  padding-left: 10px;\r\n  width: 100%; /* Adjust width to fill the container */\r\n  box-sizing: border-box; /* Include padding and borders in width calculation */\r\n\r\n  @include media-max-width() {\r\n    width: 60vw; // Use viewport width instead of fixed pixel value\r\n    margin: $main-margin * 2; // Adjust margin for mobile devices\r\n  }\r\n}\r\n\r\n\r\n.loginBtn {\r\n  @extend .mainInputStyle;\r\n  border: 2px solid $submit-color;\r\n  margin-top: $main-margin * 2;\r\n  font-size: medium;\r\n  color: $submit-color;\r\n  cursor: pointer;\r\n\r\n  &:active {\r\n    opacity: 50%;\r\n  }\r\n\r\n  &:hover {\r\n    filter: invert(100%);\r\n  }\r\n  @include media-max-width() {\r\n    width: 60vw; // Use viewport width instead of fixed pixel value\r\n    margin: $main-margin * 2; // Adjust margin for mobile devices\r\n  }\r\n}\r\n\r\n.icon {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 15px;\r\n  width: 15px;\r\n}\r\n\r\n\r\n.h1text {\r\n  text-align: center;\r\n  padding-top: 30px;\r\n}\r\n.h1text2 {\r\n  text-align: center;\r\n  padding-top: 10px;\r\n}\r\n.h1text2 {\r\n  text-align: center;\r\n  padding-top: 5px;\r\n}\r\n.signUpPrompt {\r\n  text-align: center;\r\n  justify-content: center;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.FlexDiv {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 20vh; /* Set the height to 100% of the viewport height to center vertically */\r\n}\r\n\r\n.webcamContainer{\r\n  background-color: darken($color: #312a4a, $amount: 5);\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.webcam-btn {\r\n  align-items: center;\r\n}\r\n\r\n.hiddenMobile {\r\n  text-align: center;\r\n}\r\n\r\n.hiddenDesktop{\r\n  text-align: center;\r\n}\r\n\r\n\r\n\r\n","@mixin display-flex() {\r\n  display: -webkit-box;\r\n  display: -ms-flexbox;\r\n  display: -webkit-flex;\r\n  display: flex;\r\n}\r\n\r\n@mixin justify-content-center() {\r\n  -webkit-box-pack: center;\r\n  -ms-flex-pack: center;\r\n  justify-content: center;\r\n}\r\n\r\n@mixin align-items-center() {\r\n  -webkit-box-align: center;\r\n  -ms-flex-align: center;\r\n  align-items: center;\r\n}\r\n\r\n@mixin input-placeholder() {\r\n  &::-webkit-input-placeholder,\r\n  &::-moz-placeholder,\r\n  &::-ms-input-placeholder,\r\n  &::placeholder {\r\n    position: absolute;\r\n    margin-top: 18px;\r\n    color: #fff;\r\n  }\r\n}\r\n\r\n@mixin media-max-width() {\r\n  @media (max-width: 550px) {\r\n    @content;\r\n  }\r\n}\r\n","$submit-color: #00ff29;\r\n$main-margin: 10px;\r\n\r\n// primary\r\n$black: #000000;\r\n$white: #ffffff;\r\n$blueBlack: #0B0B0F;\r\n$red: #df020a;\r\n$blackSec: #131419;\r\n\r\n\r\n// secondary\r\n$blue: #6166DC;\r\n\r\n\r\n//sub-texts/links\r\n$subText: #868F97;\r\n$darkOrange: #f72d00;\r\n$green: #00ffba;\r\n$secText: #858383;\r\n$col-yellow: #DBB635;\r\n\r\n\r\n\r\n\r\n// landing shapes\r\n$blueShape: #2a97ff;\r\n$redShape: #ff3562;\r\n$greenShape: #57e0c6;\r\n$purpleShape: #6935db;\r\n\r\n\r\n//unused colors\r\n// $shape: #2f2f2f;\r\n$grey-black: #0f0f0f;\r\n$orange: #f26d50;\r\n$pinkShape: #ff61bc;\r\n\r\n// portfolio boxes\r\n$boxBlue: #2a6ef0;\r\n\r\n\r\n\r\n@mixin button {\r\n    outline: none;\r\n    border: transparent;\r\n    // border-radius: 5px;\r\n    cursor: pointer;\r\n    // font-weight: 600;\r\n    text-transform: capitalize;\r\n    color: $white;\r\n    padding: 15px 30px;\r\n}\r\n\r\n@mixin textUnderline($color) {\r\n    background: linear-gradient(0deg, rgba(255, 0, 255, 0) 0%, rgba(255, 0, 255, 0) 16%, $color 16%, $color 32%, rgba(255, 0, 255, 0) 10%);\r\n    padding: .2em 0.1em;\r\n    box-decoration-break: clone;\r\n    -webkit-box-decoration-break: clone;\r\n}","@import './breakpoints.scss';\r\n@import './variables.scss';\r\n\r\n// entry transition class\r\n.transition {\r\n    overflow: hidden;\r\n    height: 0;\r\n    z-index: 1;\r\n    background: $black;\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    // bottom: 0;\r\n    right: 0;\r\n}\r\n\r\n\r\n// exit transition class\r\n.transition2 {\r\n    @extend .transition;\r\n    z-index: 5;\r\n}\r\n\r\n\r\n//custom cursor\r\n\r\n.cursor {\r\n    width: 50px;\r\n    height: 50px;\r\n    pointer-events: none;\r\n    background-color: $white;\r\n    border-radius: 50%;\r\n    color: $black;\r\n    position: absolute;\r\n    transition: 450ms ease-out;\r\n    z-index: 10;\r\n    mix-blend-mode: exclusion;\r\n    animation: cursorName 500ms infinite alternate;\r\n\r\n    @include media(\"<=tablet\") {\r\n        display: none;\r\n    }\r\n}\r\n\r\n.cursor2 {\r\n    width: 10px;\r\n    height: 10px;\r\n    transition: 200ms ease-out;\r\n}\r\n\r\n.fade-in-section {\r\n    opacity: 0;\r\n    transform: translateY(20vh);\r\n    visibility: hidden;\r\n    transition: opacity 0.6s ease-out, transform 1.2s ease-out;\r\n    will-change: opacity, visibility;\r\n}\r\n\r\n.fade-in-section.visible {\r\n    opacity: 1;\r\n    transform: none;\r\n    visibility: visible;\r\n}\r\n\r\n.pages {\r\n    max-width: 1440px;\r\n    margin: 0 auto;\r\n}","$breakpoints: (\r\n  \"phone\": 425px,\r\n  \"tablet\": 768px,\r\n  \"desktop\": 1366px,\r\n  \"LGdesktop\": 1920px\r\n) !default;\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///\t\t'retina2x': (\r\n///\t\t\t'(-webkit-min-device-pixel-ratio: 2)',\r\n///\t\t\t'(min-resolution: 192dpi)'\r\n///\t\t)\r\n///\t);\r\n///\r\n$media-expressions: (\r\n  \"screen\": \"screen\",\r\n  \"print\": \"print\",\r\n  \"handheld\": \"handheld\",\r\n  \"retina2x\": (\r\n    \"(-webkit-min-device-pixel-ratio: 2)\",\r\n    \"(min-resolution: 192dpi)\"\r\n  ),\r\n  \"retina3x\": (\r\n    \"(-webkit-min-device-pixel-ratio: 3)\",\r\n    \"(min-resolution: 350dpi)\"\r\n  )\r\n) !default;\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media(\">128px\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media(\">20em\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media(\">2.0rem\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: (\r\n  \"px\": 1,\r\n  \"em\": 0.01,\r\n  \"rem\": 0.1\r\n) !default;\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {List}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media(\">phone\") { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media(\">phone\", \"<=tablet\") { }\r\n///\r\n/// @example scss - With custom values\r\n///  @include media(\">=358px\", \"<850px\") { }\r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media(\">desktop\", \"<=1350px\") { }\r\n///\r\n/// @example scss - With a static expression\r\n///  @include media(\"retina2x\") { }\r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media(\">=350px\", \"<tablet\", \"retina3x\") { }\r\n///\r\n@mixin media($conditions...) {\r\n  @for $i from 1 through length($conditions) {\r\n    $conditions: set-nth(\r\n      $conditions,\r\n      $i,\r\n      parse-expression(nth($conditions, $i))\r\n    );\r\n  }\r\n\r\n  $branches: get-query-branches($conditions);\r\n  $query: \"\";\r\n\r\n  @each $branch in $branches {\r\n    @if (str-length($query) != 0) {\r\n      $query: $query + \", \";\r\n    }\r\n\r\n    $query: $query + $branch;\r\n  }\r\n\r\n  @media #{$query} {\r\n    @content;\r\n  }\r\n}\r\n\r\n///\r\n/// Reads a list of media query expressions and separates logical disjunctions into different branches\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {List}   $expressions  - list of expressions\r\n///\r\n/// @throws `$expression` is not a valid expression\r\n///\r\n/// @return {List | Null}\r\n///\r\n@function get-query-branches($expressions) {\r\n  $result: \"\";\r\n  $has-groups: false;\r\n\r\n  // Getting initial snapshot and looking for groups\r\n  @each $expression in $expressions {\r\n    @if (str-length($result) != 0) {\r\n      $result: $result + \" and \";\r\n    }\r\n\r\n    @if (type-of($expression) == \"string\") {\r\n      $result: $result + $expression;\r\n    } @else if (type-of($expression) == \"list\") {\r\n      $result: $result + nth($expression, 1);\r\n      $has-groups: true;\r\n    } @else {\r\n      @warn '#{$expression} is not a valid expression.';\r\n    }\r\n  }\r\n\r\n  // If we have groups, we have to create all possible combinations\r\n  @if $has-groups {\r\n    @each $expression in $expressions {\r\n      @if (type-of($expression) == \"list\") {\r\n        $first: nth($expression, 1);\r\n\r\n        @each $member in $expression {\r\n          @if ($member != $first) {\r\n            @each $partial in $result {\r\n              $result: join(\r\n                $result,\r\n                str-replace-first($first, $member, $partial)\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n///\r\n/// Parses a string to form a media query expression\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {String}   $expression  - expression (in string)\r\n///\r\n/// @throws Expression with type `type-of($expression)` detected, string expected\r\n/// @throws `$expression` is missing an operator\r\n/// @throws Unknown unit: `$unit`\r\n///\r\n/// @return {String | Null}\r\n///\r\n@function parse-expression($expression) {\r\n  $operator: \"\";\r\n  $value: \"\";\r\n  $element: \"\";\r\n  $result: \"\";\r\n  $is-width: true;\r\n\r\n  @if (type-of($expression) != \"string\") {\r\n    @warn 'Expression with type `#{type-of($expression)}` detected, string expected.';\r\n  }\r\n\r\n  // Separating the operator from the rest of the expression\r\n  @if (str-slice($expression, 2, 2) == \"=\") {\r\n    $operator: str-slice($expression, 1, 2);\r\n    $value: str-slice($expression, 3);\r\n  } @else {\r\n    $operator: str-slice($expression, 1, 1);\r\n    $value: str-slice($expression, 2);\r\n  }\r\n\r\n  // Checking what type of expression we're dealing with\r\n  @if map-has-key($breakpoints, $value) {\r\n    $result: map-get($breakpoints, $value);\r\n  } @else if map-has-key($media-expressions, $expression) {\r\n    $result: map-get($media-expressions, $expression);\r\n    $is-width: false;\r\n  } @else {\r\n    $result: to-number($value);\r\n  }\r\n\r\n  @if ($is-width) {\r\n    $unit: unit($result);\r\n    $interval: 0;\r\n\r\n    @if (map-has-key($unit-intervals, $unit)) {\r\n      $interval: map-get($unit-intervals, $unit);\r\n    } @else {\r\n      @warn 'Unknown unit: #{$unit}';\r\n    }\r\n\r\n    @if ($operator == \">\") {\r\n      $element: \"(min-width: #{$result + $interval})\";\r\n    } @else if ($operator == \"<\") {\r\n      $element: \"(max-width: #{$result - $interval})\";\r\n    } @else if ($operator == \">=\") {\r\n      $element: \"(min-width: #{$result})\";\r\n    } @else if ($operator == \"<=\") {\r\n      $element: \"(max-width: #{$result})\";\r\n    } @else {\r\n      @warn '#{$expression} is missing an operator.';\r\n    }\r\n  } @else {\r\n    $element: $result;\r\n  }\r\n\r\n  @return $element;\r\n}\r\n\r\n///\r\n/// Replaces the first occurence of the string with the replacement string\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {String}   $search  - The value being searched for\r\n/// @param {String}   $replace  - The replacement string\r\n/// @param {String}   $subject  - The string being replaced on\r\n///\r\n/// @return {String | Null}\r\n///\r\n@function str-replace-first($search, $replace, $subject) {\r\n  $search-start: str-index($subject, $search);\r\n\r\n  @if $search-start == null {\r\n    @return $subject;\r\n  }\r\n\r\n  $result: str-slice($subject, 0, $search-start - 1);\r\n  $result: $result + $replace;\r\n  $result: $result + str-slice($subject, $search-start + str-length($search));\r\n\r\n  @return $result;\r\n}\r\n\r\n///\r\n/// Casts a number to a string\r\n///\r\n/// @author Hugo Giraudel\r\n///\r\n/// @param {String}   $string  - Number to be parsed\r\n///\r\n/// @return {List | Null}\r\n///\r\n@function to-number($string) {\r\n  // Matrices\r\n  $strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\r\n  $numbers: 0 1 2 3 4 5 6 7 8 9;\r\n\r\n  // Result\r\n  $result: 0;\r\n  $divider: 0;\r\n  $minus: false;\r\n\r\n  // Looping through all characters\r\n  @for $i from 1 through str-length($string) {\r\n    $character: str-slice($string, $i, $i);\r\n    $index: index($strings, $character);\r\n\r\n    @if $character == \"-\" {\r\n      $minus: true;\r\n    } @else if $character == \".\" {\r\n      $divider: 1;\r\n    } @else {\r\n      @if type-of($index) != \"number\" {\r\n        $result: if($minus, $result * -1, $result);\r\n        @return _length($result, str-slice($string, $i));\r\n      }\r\n\r\n      $number: nth($numbers, $index);\r\n\r\n      @if $divider == 0 {\r\n        $result: $result * 10;\r\n      } @else {\r\n        // Move the decimal dot to the left\r\n        $divider: $divider * 10;\r\n        $number: $number / $divider;\r\n      }\r\n\r\n      $result: $result + $number;\r\n    }\r\n  }\r\n\r\n  @return if($minus, $result * -1, $result);\r\n}\r\n\r\n@function _length($number, $unit) {\r\n  $strings: \"px\" \"cm\" \"mm\" \"%\" \"ch\" \"pica\" \"in\" \"em\" \"rem\" \"pt\" \"pc\" \"ex\" \"vw\"\r\n    \"vh\" \"vmin\" \"vmax\";\r\n  $units: 1px 1cm 1mm 1% 1ch 1pica 1in 1em 1rem 1pt 1pc 1ex 1vw 1vh 1vmin 1vmax;\r\n  $index: index($strings, $unit);\r\n\r\n  @if type-of($index) != \"number\" {\r\n    @warn 'Unknown unit `#{$unit}`.';\r\n    @return false;\r\n  }\r\n\r\n  @return $number * nth($units, $index);\r\n}",".post-body {\r\n  margin: 1em 20%;\r\n  width: fit-content;\r\n  background-image: linear-gradient(to bottom right, rgb(66, 29, 231), cyan); /* Gradient from blue to cyan */\r\n  color: black;\r\n  border-radius: 10px;\r\n  position: relative;\r\n}\r\n\r\n.message {\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n}\r\n\r\n.messageDate {\r\n  position: absolute; \r\n  right: 10px; \r\n  top: 10px; \r\n}\r\n\r\n\r\n@media(max-width: 900px) {\r\n  .post-body {\r\n    margin: 1em;\r\n  }\r\n}\r\n\r\n.text {\r\n  color: aliceblue;\r\n}","\r\n.post-editor {\r\n  margin: 1em 20%;\r\n  position: sticky;\r\n  bottom: 0;\r\n}\r\n\r\n.post-editor-button {\r\n  position: sticky;\r\n  float: right;\r\n  margin-top: 1em;\r\n  bottom: 0;\r\n}\r\n\r\n\r\n\r\n@media(max-width: 900px) {\r\n  .post-editor {\r\n    margin: 1em;\r\n  }\r\n\r\n  .post-body {\r\n    margin: 1em;\r\n  }\r\n}"],"names":[],"sourceRoot":""}